name: Trigger Python Scripts on Any Change

on:
  push:  # Trigger workflow on any push event in the repository
    branches:
      - main  # Specify the branch (e.g., main). Adjust this if needed.

jobs:
  run-python-scripts:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Specify the Python version

      # Step 3: Set up GCP authentication
      - name: Authenticate with GCP
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "$GCP_SERVICE_ACCOUNT_KEY" | base64 --decode > gcp-key.json
          export GOOGLE_APPLICATION_CREDENTIALS="$PWD/gcp-key.json"

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Identify and Process Changed Files
      - name: Identify and Process Changed Files
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          # Default to processing all files if the previous commit is invalid
          if git cat-file -e ${{ github.event.before }} 2>/dev/null; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          else
            echo "Previous commit not found. Defaulting to all files in the repository."
            CHANGED_FILES=$(git ls-files)
          fi
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No files to process."
            exit 0
          fi

          echo "Processing the following files:"
          echo "$CHANGED_FILES"

          for FILE in $CHANGED_FILES; do
            echo "Running script for $FILE..."
            python path/to/your_script.py --file $FILE
          done
